import{T as g}from"./TheSwiper-b491b849.js";import{_ as y,q as a,o as m,A as p,y as E,a as _,t as f,c as u,v as c,n as C,F as b,r as x}from"./index-c43893df.js";import{T as D,a as S}from"./TheButton-61bec00d.js";const T={components:{TheSwiper:g},name:"SettingsCemeterysPoint",props:["cemetery"],data(){return{swipe:null}},watch:{swipe(s){s=="delete"&&this.$store.dispatch("DELETE_CEMETERYS",this.$props.cemetery.id),s=="edit"&&this.$emit("getEdit",this.$props.cemetery.id),this.swipe=null}}},v={class:"settings-cemeterys__point"},I={class:"cemeterys-point__name"},$={class:"cemeterys-point__label"};function w(s,e,o,h,t,l){const d=a("the-swiper");return m(),p(d,{onSwipe:e[0]||(e[0]=i=>t.swipe=i)},{default:E(()=>{var i,n;return[_("div",v,[_("div",I,f((i=o.cemetery)==null?void 0:i.name),1),_("div",$,f((n=o.cemetery)==null?void 0:n.label),1)])]}),_:1})}const k=y(T,[["render",w]]);const F={name:"SettingsCemeterysAdd",props:["editID"],components:{TheInputText:D,TheButton:S},data(){return{isOpen:!1,name:"",label:""}},methods:{clearForm(){this.isOpen=!this.isOpen,this.name="",this.label="",this.$emit("clearForm",null)},async addCemetery(){this.$store.dispatch("ADD_CEMETERYS",{name:this.name,label:this.label}).then(this.clearForm())},async editCemetery(){this.$store.dispatch("EDIT_CEMETERYS",[{name:this.name,label:this.label},this.$props.editID]).then(this.clearForm())}},watch:{editID(s){if(s){let e=this.$store.getters.GET_CEMETERYS.find(o=>o.id==s);this.isOpen=!0,this.name=e.name,this.label=e.label}}}},A={class:"cemeterys-add__form"};function M(s,e,o,h,t,l){const d=a("font-awesome-icon"),i=a("the-input-text"),n=a("the-button");return m(),u("div",{class:C(["settings-cemeterys__add",{"settings-cemeterys__add--open":t.isOpen}])},[_("div",{class:C(["cemeterys-add__btn",{"cemeterys-add__btn--open":t.isOpen}]),onClick:e[0]||(e[0]=(...r)=>l.clearForm&&l.clearForm(...r))},[c(d,{icon:["fas","plus"],size:"xs"})],2),_("div",A,[c(i,{type:"text",label:"Название",modelValue:t.name,"onUpdate:modelValue":e[1]||(e[1]=r=>t.name=r),modelModifiers:{trim:!0}},null,8,["modelValue"]),c(i,{type:"text",label:"Район",modelValue:t.label,"onUpdate:modelValue":e[2]||(e[2]=r=>t.label=r),modelModifiers:{trim:!0}},null,8,["modelValue"]),o.editID?(m(),p(n,{key:0,text:"Изменить",onClick:e[3]||(e[3]=r=>l.editCemetery())})):(m(),p(n,{key:1,text:"Добавить",onClick:e[4]||(e[4]=r=>l.addCemetery())}))])],2)}const O=y(F,[["render",M]]),V={components:{SettingsCemeterysAdd:O,SettingsCemeterysPoint:k},name:"AppSettingsCemeterys",data(){return{editID:null}},watch:{editID(s){s&&(this.$refs.scrollUP.parentElement.scrollTop=0)}},computed:{getCemeterys(){return this.$store.getters.GET_CEMETERYS}}},B={class:".app-settings__cemeterys",ref:"scrollUP"};function P(s,e,o,h,t,l){const d=a("settings-cemeterys-add"),i=a("settings-cemeterys-point");return m(),u("div",B,[c(d,{editID:t.editID,onClearForm:e[0]||(e[0]=n=>t.editID=n)},null,8,["editID"]),(m(!0),u(b,null,x(l.getCemeterys,n=>(m(),p(i,{key:n.id,cemetery:n,onGetEdit:e[1]||(e[1]=r=>t.editID=r)},null,8,["cemetery"]))),128))],512)}const G=y(V,[["render",P]]);export{G as default};
