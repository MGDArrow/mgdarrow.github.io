import{R as p,B as o,s as a}from"./index-83f3cc00.js";const f=p("TemplsStore",{state(){return{templs:[]}},actions:{async getTempls(){let e=r("TemplsPostArray"),t=r("TemplsDeleteArray");if(o().status)e&&await a.from("TEMPL").insert(e).then(()=>{window.localStorage.removeItem("TemplsPostArray"),this.getTempls()}),t&&await a.from("TEMPL").delete().in("name",t).then(()=>{window.localStorage.removeItem("TemplsDeleteArray"),this.getTempls()}),await a.from("TEMPL").select("*").order("id",{ascending:!0}).then(s=>{this.templs=s.data,l("TemplsBigData",s.data)});else{let s=r("TemplsBigData");e&&e.forEach(i=>{s.push(i)}),t&&t.forEach(i=>{let m=s.findIndex(n=>n.name===i);m!==-1&&s.splice(m,1)}),this.templs=s}},async postTempls(e){if(o().status)await a.from("TEMPL").insert(e);else if(window.localStorage.getItem("TemplsPostArray")){let t=r("TemplsPostArray");t.push(e),l("TemplsPostArray",t)}else l("TemplsPostArray",[e]);window.navigator.vibrate([100,50,100]),this.getTempls()},async putTempls(e,t){await a.from("TEMPL").update(e).eq("id",t),window.navigator.vibrate(200),this.getTempls()},async deleteTempls(e){if(o().status)await a.from("TEMPL").delete().eq("id",e.id);else if(window.localStorage.getItem("TemplsDeleteArray")){let t=r("TemplsDeleteArray");t.push(e.name),l("TemplsDeleteArray",t)}else l("TemplsDeleteArray",[e.name]);window.navigator.vibrate([500,100,50]),this.getTempls()}}});function r(e){return JSON.parse(window.localStorage.getItem(e))}function l(e,t){window.localStorage.setItem(e,JSON.stringify(t))}export{f as u};
