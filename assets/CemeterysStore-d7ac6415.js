import{R as l,B as m,s}from"./index-f2cf6056.js";const C=l("CemeterysStore",{state(){return{cemeterys:[]}},actions:{async getCemeterys(){let e=a("CemeterysPostArray"),t=a("CemeterysDeleteArray");if(m().status)e&&await s.from("CEMETERY").insert(e).then(()=>{window.localStorage.removeItem("CemeterysPostArray"),this.getCemeterys()}),t&&await s.from("CEMETERY").delete().in("name",t).then(()=>{window.localStorage.removeItem("CemeterysDeleteArray"),this.getCemeterys()}),await s.from("CEMETERY").select("*").order("id",{ascending:!0}).then(r=>{this.cemeterys=r.data,i("CemeterysBigData",r.data)});else{let r=a("CemeterysBigData");e&&e.forEach(o=>{r.push(o)}),t&&t.forEach(o=>{let y=r.findIndex(n=>n.name===o);y!==-1&&r.splice(y,1)}),this.cemeterys=r}},async postCemeterys(e){if(m().status)await s.from("CEMETERY").insert(e);else if(window.localStorage.getItem("CemeterysPostArray")){let t=a("CemeterysPostArray");t.push(e),i("CemeterysPostArray",t)}else i("CemeterysPostArray",[e]);window.navigator.vibrate([100,50,100]),this.getCemeterys()},async putCemeterys(e,t){await s.from("CEMETERY").update(e).eq("id",t),this.getCemeterys(),window.navigator.vibrate(200)},async deleteCemeterys(e){if(m().status)await s.from("CEMETERY").delete().eq("id",e.id);else if(window.localStorage.getItem("CemeterysDeleteArray")){let t=a("CemeterysDeleteArray");t.push(e.name),i("CemeterysDeleteArray",t)}else i("CemeterysDeleteArray",[e.name]);window.navigator.vibrate([500,100,50]),this.getCemeterys()}}});function a(e){return JSON.parse(window.localStorage.getItem(e))}function i(e,t){window.localStorage.setItem(e,JSON.stringify(t))}export{C as u};
