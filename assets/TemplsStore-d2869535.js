import{Q as n,M as i,s as l}from"./index-e125b7d4.js";const f=n("TemplsStore",{state(){return{templs:[]}},actions:{async getTempls(){let e=a("TemplsPostArray"),t=a("TemplsDeleteArray");if(i().status)e&&await l.from("TEMPL").insert(e).then(()=>{window.localStorage.removeItem("TemplsPostArray"),this.getTempls()}),t&&await l.from("TEMPL").delete().in("name",t).then(()=>{window.localStorage.removeItem("TemplsDeleteArray"),this.getTempls()}),await l.from("TEMPL").select("*").order("id",{ascending:!0}).then(s=>{this.templs=s.data,r("TemplsBigData",s.data)});else{let s=a("TemplsBigData");e&&e.forEach(m=>{s.push(m)}),t&&t.forEach(m=>{let o=s.findIndex(p=>p.name===m);o!==-1&&s.splice(o,1)}),this.templs=s}},async postTempls(e){if(i().status)await l.from("TEMPL").insert(e);else if(window.localStorage.getItem("TemplsPostArray")){let t=a("TemplsPostArray");t.push(e),r("TemplsPostArray",t)}else r("TemplsPostArray",[e]);this.getTempls()},async putTempls(e,t){await l.from("TEMPL").update(e).eq("id",t),this.getTempls()},async deleteTempls(e){if(i().status)await l.from("TEMPL").delete().eq("id",e.id);else if(window.localStorage.getItem("TemplsDeleteArray")){let t=a("TemplsDeleteArray");t.push(e.name),r("TemplsDeleteArray",t)}else r("TemplsDeleteArray",[e.name]);this.getTempls()}}});function a(e){return JSON.parse(window.localStorage.getItem(e))}function r(e,t){window.localStorage.setItem(e,JSON.stringify(t))}export{f as u};
